"use client";
import { AppContext } from "@/context/AppContext";
import { useUser } from "@/context/UserContext";
import useConfig from "@/hooks/useConfig";
import { formatCurrency } from "@/lib/utils";
import axios from "axios";
import Link from "next/link";
import { useRouter, useSearchParams } from "next/navigation";
import { useContext, useEffect } from "react";
import { Image, Table } from "react-bootstrap";

export default function PaymentAtmPage() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const { config } = useConfig();
  const { user } = useUser();
  const amount = searchParams.get("amount");

  const noiDung = process.env.NEXT_PUBLIC_SITE_ID;
  // üî• Ki·ªÉm tra n·∫øu ch∆∞a ƒëƒÉng nh·∫≠p ‚Üí Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ch·ªß
  useEffect(() => {
    if (!localStorage.getItem("token")) {
      router.push("/");
    }
  }, []);

  const fetchAutoDeposit = async () => {
    try {
      const res = await axios.post("/api/payment/atm");
      console.log("K·∫øt qu·∫£ c·ªông ti·ªÅn: ", res.data);
    } catch (error) {
      console.error("Fetch history error:", error);
    }
  };

  useEffect(() => {
    // G·ªçi API ngay khi component mount
    fetchAutoDeposit();

    // ƒê·∫∑t interval g·ªçi API m·ªói 15 gi√¢y
    const interval = setInterval(() => {
      fetchAutoDeposit();
    }, 15000 * 2);

    // D·ªçn d·∫πp interval khi component unmount
    return () => clearInterval(interval);
  }, []);

  return (
    <div>
      <div className="text-center fw-semibold text-white">
        <Table responsive="sm" hover className="transparent-table">
          <tbody>
            <tr>
              <td className="text-white">Ng√¢n h√†ng</td>
              <td className="text-white">{config?.payment?.atm?.nameStk}</td>
            </tr>
            <tr>
              <td className="text-white">Ch·ªß t√†i kho·∫£n</td>
              <td className="text-white">{config?.payment?.atm?.name}</td>
            </tr>
            <tr>
              <td className="text-white">S·ªë t√†i kho·∫£n</td>
              <td className="text-white">{config?.payment?.atm?.stk}</td>
            </tr>
            <tr>
              <td className="text-white">S·ªë ti·ªÅn</td>
              <td className="text-white">{formatCurrency(amount)}</td>
            </tr>
            <tr>
              <td className="text-white">N·ªôi dung</td>
              <td className="text-white">
                {noiDung} {user?.id}
              </td>
            </tr>
          </tbody>
        </Table>

        <div>
          <p className="fs-5">Qu√©t m√£ ƒë·ªÉ thanh to√°n</p>
          <Image src={`https://img.vietqr.io/image/${config?.payment?.atm?.key}-${config?.payment?.atm?.stk}-compact.png?amount=${amount}&addInfo=${noiDung}%20${user?.id}`} alt="qr" width={250} />
        </div>

        <div style={{ display: "flex", justifyContent: "center", alignItems: "center", flexDirection: "column", marginBottom: 16 }}>
          <button disabled style={{ padding: "10px 24px", borderRadius: 8, background: "#ffc107", color: "#222", fontWeight: 600, border: "none", fontSize: 18, display: "flex", alignItems: "center", gap: 8 }}>
            <span className="spinner-border spinner-border-sm" role="status" aria-hidden="true" style={{ marginRight: 8 }}></span>
            ƒêang ch·ªù qu√©t m√£...
          </button>
        </div>

        <div className="hk-flex p-2 mt-2">
          <Link href={"/payment/history"} className="text-warning">
            Ki·ªÉm tra l·ªãch s·ª≠ n·∫°p
          </Link>
        </div>
        <p className="fs-6 mt-3">
          - L∆∞u √Ω khi thanh to√°n: Giao d·ªãch tr√™n ho√†n to√†n ƒë∆∞·ª£c ki·ªÉm duy·ªát t·ª± ƒë·ªông, y√™u c·∫ßu ki·ªÉm tra k·ªπ n·ªôi dung chuy·ªÉn ti·ªÅn tr∆∞·ªõc khi th·ª±c hi·ªán chuy·ªÉn. N·∫øu ghi thi·∫øu, sai ho·∫∑c qu√° 10 ph√∫t kh√¥ng th·∫•y c·ªông ti·ªÅn, c√°c b·∫°n
          h√£y li√™n h·ªá v·ªõi Admin ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.
        </p>
      </div>
    </div>
  );
}
